stages:
  - build
  - lint
  - test
  - tag
  - deploy

build:
  stage: build
  tags: ['builddev-shell']
  before_script:
    - docker login $CI_REGISTRY -u $CI_REGISTRY_USER --password-stdin <<<$CI_REGISTRY_PASSWORD
  script:
    - cd nginx/
    - docker build -t $CI_REGISTRY/iusca/bioloop/nginx:test .
    - docker push $CI_REGISTRY/iusca/bioloop/nginx:test
    - cd ../api/
    - docker build -t $CI_REGISTRY/iusca/bioloop/api:test .
    - docker push $CI_REGISTRY/iusca/bioloop/api:test
    - cd ../ui/
    - docker build -t $CI_REGISTRY/iusca/bioloop/ui:test .
    - docker push $CI_REGISTRY/iusca/bioloop/ui:test
    - cd ../test/e2e/
    # - docker build -t $CI_REGISTRY/iusca/bioloop/test:test .
    # - docker push $CI_REGISTRY/iusca/bioloop/test:test


lint-api:
  tags: ['builddev-docker']
  image: '$CI_REGISTRY/iusca/bioloop/api:test'
  stage: lint
  script:
    - cd /opt/sca/app
    - npm run lint

lint-ui:
  tags: ['builddev-docker']
  image: $CI_REGISTRY/iusca/bioloop/ui:test
  stage: lint
  script:
    - cd /opt/sca/app
    - npm run lint

test-migrations:
  tags: ['builddev-shell']
  environment:
    name: testing
  stage: test
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY 
  script:
    - cd test/
    - docker compose down 
    - docker compose pull && docker compose  up -d --force-recreate
    - docker compose exec api npx prisma migrate deploy
    - docker compose  down
    - docker run --rm -v $CI_PROJECT_DIR:$CI_PROJECT_DIR bash rm -rf $CI_PROJECT_DIR/*

test-e2e:
  tags: ['builddev-shell']
  environment:
    name: testing
  stage: test
  script:
    - cd test/
    - docker compose down
    - docker compose pull && docker compose  up -d --force-recreate
    - docker compose exec test npm run test
    - docker compose  down

tag:
  tags: ['builddev-shell']
  stage: tag
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY 
  script:
    - tag=$(git rev-parse @)
    - docker tag $CI_REGISTRY/iusca/bioloop/api:test $CI_REGISTRY/iusca/bioloop/api:$tag
    - docker push $CI_REGISTRY/iusca/bioloop/api:$tag
    - docker tag $CI_REGISTRY/iusca/bioloop/api:test $CI_REGISTRY/iusca/bioloop/api:latest
    - docker push $CI_REGISTRY/iusca/bioloop/api:latest
    - docker tag $CI_REGISTRY/iusca/bioloop/ui:test $CI_REGISTRY/iusca/bioloop/ui:$tag
    - docker push $CI_REGISTRY/iusca/bioloop/ui:$tag
    - docker tag $CI_REGISTRY/iusca/bioloop/ui:test $CI_REGISTRY/iusca/bioloop/ui:latest
    - docker push $CI_REGISTRY/iusca/bioloop/ui:latest
    - docker tag $CI_REGISTRY/iusca/bioloop/nginx:test $CI_REGISTRY/iusca/bioloop/nginx:$tag
    - docker push $CI_REGISTRY/iusca/bioloop/nginx:$tag
    - docker tag $CI_REGISTRY/iusca/bioloop/nginx:test $CI_REGISTRY/iusca/bioloop/nginx:latest
    - docker push $CI_REGISTRY/iusca/bioloop/nginx:latest



#Release per deployment -using a runner on each environment
deploy_test_app:
  tags: ['buildtest-shell']
  environment:
    name: testing
  stage: deploy
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY 
  script:
    - cd deploy/
    - docker compose down # remove any existing containers/networks
    - docker compose pull && docker compose up -d --force-recreate
  