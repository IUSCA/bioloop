generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model batch {
  id               Int           @id @default(autoincrement())
  name             String
  num_directories  Int?
  num_files        Int?
  num_genome_files Int?
  du_size          BigInt?
  size             BigInt?
  description      String?
  created_at       DateTime      @default(now()) @db.Timestamp(6)
  updated_at       DateTime      @default(now()) @updatedAt @db.Timestamp(6)
  origin_path      String?
  archive_path     String?
  stage_path       String?
  report_id        String?
  is_deleted       Boolean       @default(false)
  workflows        workflow[]
  metadata         checksum[]
  audit_logs       batch_audit[]
}

model checksum {
  path     String
  md5      String
  id       Int    @id @default(autoincrement())
  batch_id Int?
  batch    batch? @relation(fields: [batch_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model user {
  id            Int             @id @default(autoincrement())
  username      String          @unique @db.VarChar(100)
  password      String?         @db.VarChar(100)
  name          String?         @db.VarChar(100)
  email         String          @unique @db.VarChar(100)
  cas_id        String?         @unique @db.VarChar(100)
  notes         String?
  created_at    DateTime        @default(now()) @db.Timestamp(6)
  updated_at    DateTime        @default(now()) @updatedAt @db.Timestamp(6)
  is_deleted    Boolean         @default(false)
  user_role     user_role[]
  user_settings user_settings[]
  contact       contact[]
  batch_audit   batch_audit[]
}

model user_settings {
  id       Int  @id @default(autoincrement())
  user_id  Int  @unique
  settings Json
  users    user @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model contact {
  id          Int    @id @default(autoincrement())
  name        String
  description String
  type        String
  user_id     Int
  user        user   @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model role {
  id          Int         @id @default(autoincrement())
  name        String      @db.VarChar(50)
  description String      @default("") @db.VarChar(255)
  user_role   user_role[]
}

model user_role {
  user_id     Int
  role_id     Int
  roles       role     @relation(fields: [role_id], references: [id])
  users       user     @relation(fields: [user_id], references: [id])
  assigned_at DateTime @default(now())

  @@id([user_id, role_id])
}

model workflow {
  id       String @id
  batch_id Int?
  batch    batch? @relation(fields: [batch_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model batch_audit {
  id        Int      @id @default(autoincrement())
  action    String
  timestamp DateTime @default(now())
  old_data  Json?
  new_data  Json?
  user_id   Int?
  user      user?    @relation(fields: [user_id], references: [id])
  batch_id  Int
  batch     batch?   @relation(fields: [batch_id], references: [id])
}
