generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model dataset {
  id               Int                 @id @default(autoincrement())
  name             String
  type             String
  num_directories  Int?
  num_files        Int?
  du_size          BigInt?
  size             BigInt?
  description      String?
  created_at       DateTime            @default(now()) @db.Timestamp(6)
  updated_at       DateTime            @default(now()) @updatedAt @db.Timestamp(6)
  origin_path      String?
  archive_path     String?
  is_deleted       Boolean             @default(false)
  is_staged        Boolean             @default(false)
  metadata         Json?
  workflows        workflow[]
  files            dataset_file[]
  audit_logs       dataset_audit[]
  states           dataset_state[]
  derived_datasets dataset_hierarchy[] @relation("source_datasets")
  source_datasets  dataset_hierarchy[] @relation("derived_datasets")
  projects         project_dataset[]

  @@unique([name, type])
}

model dataset_hierarchy {
  source_id       Int
  derived_id      Int
  assigned_at     DateTime @default(now()) @db.Timestamp(6)
  source_dataset  dataset  @relation(name: "source_datasets", fields: [source_id], references: [id])
  derived_dataset dataset  @relation(name: "derived_datasets", fields: [derived_id], references: [id])

  @@id([source_id, derived_id])
}

model dataset_file {
  id         Int                      @id @default(autoincrement())
  name       String?
  path       String
  md5        String?
  size       BigInt?
  filetype   String?
  metadata   Json?
  status     String?
  dataset_id Int
  dataset    dataset                  @relation(fields: [dataset_id], references: [id], onDelete: NoAction)
  parents    dataset_file_hierarchy[] @relation("child")
  children   dataset_file_hierarchy[] @relation("parent")

  @@unique([path, dataset_id])
  @@index([dataset_id])
}

model dataset_file_hierarchy {
  parent_id Int
  child_id  Int
  parent    dataset_file? @relation(name: "parent", fields: [parent_id], references: [id])
  child     dataset_file? @relation(name: "child", fields: [child_id], references: [id])

  @@id([parent_id, child_id])
}

model dataset_audit {
  id         Int      @id @default(autoincrement())
  action     String
  timestamp  DateTime @default(now())
  old_data   Json?
  new_data   Json?
  user_id    Int?
  user       user?    @relation(fields: [user_id], references: [id])
  dataset_id Int
  dataset    dataset? @relation(fields: [dataset_id], references: [id])
}

model dataset_state {
  state      String
  timestamp  DateTime @default(now()) @db.Timestamp(6)
  metadata   Json?
  dataset_id Int
  dataset    dataset? @relation(fields: [dataset_id], references: [id])

  @@id([timestamp, dataset_id, state])
}

model user {
  id            Int             @id @default(autoincrement())
  username      String          @unique @db.VarChar(100)
  name          String?         @db.VarChar(100)
  email         String          @unique @db.VarChar(100)
  cas_id        String?         @unique @db.VarChar(100)
  notes         String?
  created_at    DateTime        @default(now()) @db.Timestamp(6)
  updated_at    DateTime        @default(now()) @updatedAt @db.Timestamp(6)
  is_deleted    Boolean         @default(false)
  user_role     user_role[]
  settings      user_settings?
  contacts      contact[]
  dataset_audit dataset_audit[]
  projects      project_user[]
  password      user_password?
  login         user_login?
}

model user_password {
  id         Int      @id @default(autoincrement())
  password   String   @db.VarChar(100)
  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @default(now()) @updatedAt @db.Timestamp(6)
  user_id    Int      @unique
  user       user     @relation(fields: [user_id], references: [id])
}

model user_login {
  id         Int      @id @default(autoincrement())
  last_login DateTime @default(now()) @db.Timestamp(6)
  method     String
  user_id    Int      @unique
  user       user     @relation(fields: [user_id], references: [id])
}

model user_settings {
  id       Int  @id @default(autoincrement())
  user_id  Int  @unique
  settings Json
  users    user @relation(fields: [user_id], references: [id], onDelete: NoAction)
}

model contact {
  id          Int               @id @default(autoincrement())
  type        String
  value       String
  description String?
  user_id     Int?
  user        user?             @relation(fields: [user_id], references: [id], onDelete: NoAction)
  projects    project_contact[]

  @@unique([type, value])
}

model role {
  id          Int         @id @default(autoincrement())
  name        String      @db.VarChar(50)
  description String      @default("") @db.VarChar(255)
  user_role   user_role[]
}

model user_role {
  user_id     Int
  role_id     Int
  roles       role     @relation(fields: [role_id], references: [id])
  users       user     @relation(fields: [user_id], references: [id])
  assigned_at DateTime @default(now())

  @@id([user_id, role_id])
}

model workflow {
  id         String   @id
  dataset_id Int?
  dataset    dataset? @relation(fields: [dataset_id], references: [id], onDelete: NoAction)
}

model metric {
  timestamp   DateTime @default(now()) @db.Timestamp(6)
  measurement String
  subject     String
  usage       BigInt?
  limit       BigInt?
  fields      Json?
  tags        Json?

  @@id([timestamp, measurement, subject])
}

model project {
  id              String            @id @default(uuid())
  slug            String            @unique
  name            String
  description     String?
  browser_enabled Boolean           @default(false)
  funding         String?
  metadata        Json?
  created_at      DateTime          @default(now()) @db.Timestamp(6)
  updated_at      DateTime          @default(now()) @updatedAt @db.Timestamp(6)
  users           project_user[]
  datasets        project_dataset[]
  contacts        project_contact[]
}

model project_user {
  project_id  String
  user_id     Int
  assigned_at DateTime @default(now()) @db.Timestamp(6)
  project     project  @relation(fields: [project_id], references: [id], onDelete: Cascade)
  user        user     @relation(fields: [user_id], references: [id], onDelete: Cascade)

  @@id([project_id, user_id])
}

model project_dataset {
  project_id  String
  dataset_id  Int
  assigned_at DateTime @default(now()) @db.Timestamp(6)
  project     project  @relation(fields: [project_id], references: [id], onDelete: Cascade)
  dataset     dataset  @relation(fields: [dataset_id], references: [id], onDelete: Cascade)

  @@id([project_id, dataset_id])
}

model project_contact {
  project_id  String
  contact_id  Int
  assigned_at DateTime @default(now()) @db.Timestamp(6)
  project     project  @relation(fields: [project_id], references: [id], onDelete: Cascade)
  contact     contact  @relation(fields: [contact_id], references: [id], onDelete: Cascade)

  @@id([project_id, contact_id])
}

model adni_subject {
  main_id             String       @id
  subject_id          String
  num_images          Int?
  num_as_dx_dasc      Int?
  num_as_dx_dsbc      Int?
  adni_imaging        adni_imaging[]
  as_dx_dasc          as_dx_dasc[]
  as_dx_dsbc          as_dx_dsbc[]
  as_dx_smry          as_dx_smry[]
  sc_fh_prnt          sc_fh_prnt[]
  sc_sd_demo          sc_sd_demo[]
  gn_gr_dskn          gn_gr_dskn[]
  gn_gr_tomm          gn_gr_tomm[]
}

model adni_imaging {
  adni_subject        adni_subject @relation(fields: [main_id], references: [main_id])
  aimg_id             String       @id
  main_id             String
  image_id            String       
  rid                 String?
  tid                 String?
  project             String?
  phase               String?
  sex                 String?
  weight              String?
  research_group      String?
  apoe_a1             String?
  apoe_a2             String?
  visit               String?
  study_date          String?
  archive_date        String?
  age                 String?
  global_cdr          String?
  npiq_total_score    String?
  mmse_total_score    String?
  gdscale_total_score String?
  faq_total_score     String?
  modality            String?
  description         String?
  type                String?
  imaging_protocol    String?
  structure           String?
  laterality          String?
  image_type          String?
  registration        String?
  tissue              String?
}

model as_dx_dasc {
	adni_subject    adni_subject @relation(fields: [main_id], references: [main_id])
  as_dx_dasc_id   String       @id
	main_id         String
  rid 			      String
	site_id 		    String?
	vis_code 		    String?
	vis_code2 		  String?
	user_date 		  String?
	user_date2 		  String?
	exam_date 		  String?
	ax_nausea 		  String?
	ax_vomit 		    String?
	ax_diarrh 		  String?
	ax_constp 		  String?
	ax_abdomn 		  String?
	ax_sweatn 		  String?
	ax_dizzy 		    String?
	ax_energy 		  String?
	ax_drowsy 		  String?
	ax_vision 		  String?
	ax_hdache 		  String?
	ax_drymth 		  String?
	ax_breath 		  String?
	ax_cough 		    String?
	ax_palpit 		  String?
	ax_chest 		    String?
	ax_urndis 		  String?
	ax_urnfrq 		  String?
	ax_ankle 		    String?
	ax_muscle 		  String?
	ax_rash 		    String?
	ax_insomn 		  String?
	ax_dpmood 		  String?
	ax_crying 		  String?
	ax_elmood 		  String?
	ax_wander 		  String?
	ax_fall 		    String?
	ax_other 		    String?
	ax_specif 		  String?
	update_stamp 	  String?
}

model as_dx_dsbc {
	adni_subject    adni_subject @relation(fields: [main_id], references: [main_id])
  as_dx_dsbc_id   String       @id
	main_id         String
  rid 			      String
  site_id			    String?
  vis_code		    String?
  vis_code2		    String?
  user_date		    String?
  user_date2	    String?
  bc_predx		    String?
  bc_adas			    String?
  bc_mmse			    String?
  bc_mmsrec		    String?
  bc_nmmms		    String?
  bc_neupsy		    String?
  bc_nonmen		    String?
  bc_faq			    String?
  bc_cdr			    String?
  bc_depres		    String?
  bc_stroke		    String?
  bc_delir		    String?
  bc_extcir		    String?
  bc_extsp		    String?
  bc_coradl		    String?
  bc_corcog		    String?
  bc_summ			    String?
  update_stamp	  String?
}

model as_dx_smry {
  adni_subject    adni_subject @relation(fields: [main_id], references: [main_id])
  as_dx_smry_id   String       @id
	main_id         String
  rid 			      String
  site_id				  String?
  vis_code				String?
  vis_code2				String?
  user_date				String?
  user_date2 			String?   
  exam_date				String?
  dx_change				String?
  dx_curren				String?
  dx_conv				  String?
  dx_contyp				String?
  dx_rev				  String?
  dx_norm				  String?
  dx_nodep				String?
  dx_mci				  String?
  dx_mdes				  String?
  dx_mptr1				String?
  dx_mptr2				String?
  dx_mptr3				String?
  dx_mptr4				String?
  dx_mptr5				String?
  dx_mptr6				String?
  dx_mdue				  String?
  dx_mothet				String?
  dx_mothsp				String?
  dx_dsev				  String?
  dx_ddue				  String?
  dx_ad				    String?
  dx_ades  				String?  
  dx_app				  String?
  dx_aprob				String?
  dx_ametasp			String?
  dx_aothersp			String?
  dx_aposs				String?
  dx_aatysp				String?
  dx_ametsp   		String? 
  dx_aothsp				String?
  dx_park				  String?
  dx_parksp				String?
  dx_pdes				  String?
  dx_pcog				  String?
  dx_patyp				String?
  dx_othsp				String?
  dx_dep				  String?
  dx_depsp				String?
  dx_othdem				String?
  dx_odes				  String?
  dx_oothsp				String?
  dx_confid				String?
  diagnosis				String?
  update_stamp    String?
}

model sc_fh_prnt {
  adni_subject    adni_subject @relation(fields: [main_id], references: [main_id])
  sc_fh_prnt      String       @id
	main_id         String
  rid 			      String
  site_id					String?
  vis_code				String?
  vis_code2				String?
  user_date				String?
  user_date2			String?
  moth_alive			String?
  moth_age				String?
  moth_dem				String?
  moth_ad					String?
  moth_sxage			String?
  fath_alive			String?
  fath_age				String?
  fath_dem				String?
  fath_ad  				String?
  fath_sxage 			String?
  comments 				String?
  update_stamp 		String?
}

model sc_sd_demo {
  adni_subject    adni_subject @relation(fields: [main_id], references: [main_id])
  sc_sd_demo_id   String       @id
	main_id         String
  rid 			      String
  site_id					String? 
  vis_code				String? 
  vis_code2				String? 
  user_date				String? 
  user_date2			String? 
  pt_source				String? 
  pt_gender				String? 
  pt_dobmm				String? 
  pt_dobyy				String? 
  pt_hand					String? 
  pt_marry				String? 
  pt_educat				String? 
  pt_workhs				String? 
  pt_work 				String? 
  pt_wrecnt				String? 
  pt_notrt 				String? 
  pt_rtyr 				String? 
  pt_home 				String? 
  pt_othome 			String? 
  pt_tlang 				String? 
  pt_plang 				String? 
  pt_pspec				String? 
  pt_cogbeg 			String? 
  pt_mcibeg 			String? 
  pt_adbeg 			  String? 
  pt_addx 				String? 
  pt_ethcat 			String? 
  pt_raccat 			String? 
  update_stamp 		String? 
}

model gn_gr_dskn {
  adni_subject    adni_subject @relation(fields: [main_id], references: [main_id])
  gn_gr_dskn_id   String       @id
	main_id         String
  rid 			      String
  user_date				String?
  phs					    String?
  cir					    String?
  update_stamp		String?
}

model gn_gr_tomm {
  adni_subject    adni_subject @relation(fields: [main_id], references: [main_id])
  gn_gr_tomm_id   String       @id
	main_id         String
  rid 			      String
  tomm40_a1				String?
  tomm40_a2				String?
  update_stamp		String?
}