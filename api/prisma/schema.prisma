generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model dataset {
  id               Int                 @id @default(autoincrement())
  name             String
  type             String
  num_directories  Int?
  num_files        Int?
  du_size          BigInt?
  size             BigInt?
  description      String?
  created_at       DateTime            @default(now()) @db.Timestamp(6)
  updated_at       DateTime            @default(now()) @updatedAt @db.Timestamp(6)
  origin_path      String?
  archive_path     String?
  is_deleted       Boolean             @default(false)
  metadata         Json?
  workflows        workflow[]
  files            dataset_file[]
  audit_logs       dataset_audit[]
  states           dataset_state[]
  derived_datasets dataset_hierarchy[] @relation("source_datasets")
  source_datasets  dataset_hierarchy[] @relation("derived_datasets")
  

  @@unique([name, type])
}

model dataset_hierarchy {
  source_id   Int
  derived_id  Int
  assigned_at DateTime @default(now()) @db.Timestamp(6)

  source_dataset  dataset @relation(name: "source_datasets", fields: [source_id], references: [id])
  derived_dataset dataset @relation(name: "derived_datasets", fields: [derived_id], references: [id])

  @@id([source_id, derived_id])
}

model dataset_file {
  id         Int      @id @default(autoincrement())
  path       String
  md5        String
  size       BigInt?
  metadata   Json?
  status     String?
  dataset_id Int?
  dataset    dataset? @relation(fields: [dataset_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model dataset_audit {
  id         Int      @id @default(autoincrement())
  action     String
  timestamp  DateTime @default(now())
  old_data   Json?
  new_data   Json?
  user_id    Int?
  user       user?    @relation(fields: [user_id], references: [id])
  dataset_id Int
  dataset    dataset? @relation(fields: [dataset_id], references: [id])
}

model dataset_state {
  state      String
  timestamp  DateTime @default(now()) @db.Timestamp(6)
  metadata   Json?
  dataset_id Int
  dataset    dataset? @relation(fields: [dataset_id], references: [id])

  @@id([timestamp, dataset_id, state])
}

model user {
  id            Int             @id @default(autoincrement())
  username      String          @unique @db.VarChar(100)
  password      String?         @db.VarChar(100)
  name          String?         @db.VarChar(100)
  email         String          @unique @db.VarChar(100)
  cas_id        String?         @unique @db.VarChar(100)
  notes         String?
  created_at    DateTime        @default(now()) @db.Timestamp(6)
  updated_at    DateTime        @default(now()) @updatedAt @db.Timestamp(6)
  is_deleted    Boolean         @default(false)
  user_role     user_role[]
  user_settings user_settings[]
  contact       contact[]
  dataset_audit dataset_audit[]
}

model user_settings {
  id       Int  @id @default(autoincrement())
  user_id  Int  @unique
  settings Json
  users    user @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model contact {
  id          Int    @id @default(autoincrement())
  name        String
  description String
  type        String
  user_id     Int
  user        user   @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model role {
  id          Int         @id @default(autoincrement())
  name        String      @db.VarChar(50)
  description String      @default("") @db.VarChar(255)
  user_role   user_role[]
}

model user_role {
  user_id     Int
  role_id     Int
  roles       role     @relation(fields: [role_id], references: [id])
  users       user     @relation(fields: [user_id], references: [id])
  assigned_at DateTime @default(now())

  @@id([user_id, role_id])
}

model workflow {
  id         String   @id
  dataset_id Int?
  dataset    dataset? @relation(fields: [dataset_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model metric {
  timestamp   DateTime @default(now()) @db.Timestamp(6)
  measurement String
  subject     String
  usage       BigInt?
  limit       BigInt?
  fields      Json?
  tags        Json?

  @@id([timestamp, measurement, subject])
}
