name: bioloop
services:
  ui:
    image: node:19
    env_file:
      - ui/.env.example
    volumes:
      - ./ui/:/opt/sca/app
    ports:
      - 127.0.0.1:443:443
    working_dir: /opt/sca/app
    entrypoint:
      - sh
      - -c
      - |
        npm install && exec /opt/sca/app/node_modules/.bin/vite --host
    networks:
      network:
        ipv4_address: 172.20.0.3

  api:
    image: node:19
    env_file:
      - tests/.env.example
      - db/postgres/.env.example
      - api/.env.example
    volumes:
      - ./api/:/opt/sca/app
      - api_keys:/opt/sca/app/keys
    expose:
      - 3030
    working_dir: /opt/sca/app
    entrypoint:
      - ./bin/startup.sh
    extra_hosts:
      - "host.docker.internal:host-gateway" # for connecting to services running on localhost of the host network
    depends_on:
     - postgres
    networks:
      network:
        ipv4_address: 172.20.0.4

  postgres:
    image: postgres:14.5
    env_file:
      - ./db/postgres/.env.example
    volumes:
      - ./db/db_postgres:/var/lib/postgresql/data
      - ./db/postgres/scripts:/docker-entrypoint-initdb.d
      - ./db/backups:/opt/sca/backups
    expose:
      - 5432
    networks:
      network:
        ipv4_address: 172.20.0.5

  celery_worker:
    build:
      context: ./workers
    environment:
      - WORKER_TYPE=celery_worker
    env_file:
      - ./workers/.env.example
    depends_on:
      - queue
      - mongo
    volumes:
      - ./workers:/opt/sca/app
    networks:
      network:
        ipv4_address: 172.20.0.13

#  This is only for rhythm_api
  queue:
    # https://hub.docker.com/_/rabbitmq/
    image: rabbitmq:4-management
    ports:
      - 127.0.0.1:5672:5672
      - 127.0.0.1:15672:15672
    volumes:
      - ./db/queue/data/:/var/lib/rabbitmq/
      # - ./db/queue/log/:/var/log/rabbitmq/
    environment:
      - RABBITMQ_DEFAULT_USER=user
      - RABBITMQ_DEFAULT_PASS=password
      - RABBITMQ_DEFAULT_VHOST=myvhost
    networks:
      network:
        ipv4_address: 172.20.0.12

  mongo:
    # https://hub.docker.com/_/mongo
    image: mongo:5
    ports:
      # helpful for using a GUI client like compass for troubleshooting
      - 127.0.0.1:27017:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    volumes:
      - ./db/db_mongo:/data/db
      # for importing database files
      - ./rhythm_api/mongo:/opt/sca/app/mongodump
    networks:
      network:
        ipv4_address: 172.20.0.11

  rhythm:
    restart: unless-stopped
    build:
      context: ./rhythm_api
    expose:
      - 5001
    env_file:
      - ./rhythm_api/.env.example
    environment:
      - PORT=5001
    volumes:
      - ./rhythm_api:/opt/sca
    depends_on:
      - queue
      - mongo
    networks:
      network:
        ipv4_address: 172.20.0.10

  # This is only for secure_download
  secure_download:
    build:
      context: ./secure_download
    restart: unless-stopped
    expose:
      - 3080
    env_file:
      - ./secure_download/.env.example
    volumes:
      - /tmp:/opt/sca/data
    networks:
      network:
        ipv4_address: 172.20.0.9

  signet:
    restart: unless-stopped
    build:
      context: ./signet
    expose:
      - 5050
    environment:
      - PORT=5050
      - AUTHLIB_INSECURE_TRANSPORT=1
      - POSTGRES_DB=signet
      - POSTGRES_USER=signet
      - POSTGRES_PASSWORD=example
      - POSTGRES_HOST=signet_db
      - POSTGRES_PORT=5432
    env_file:
      - ./signet/.env.example
    volumes:
      - ./signet:/opt/sca
    depends_on:
      - postgres
    networks:
      network:
        ipv4_address: 172.20.0.7

  signet_db:
    image: postgres:14.5
    restart: unless-stopped
    environment:
      - POSTGRES_DB=signet
      - POSTGRES_USER=signet
      - POSTGRES_PASSWORD=example
      - POSTGRES_SCHEMA=signet
      - POSTGRES_PORT=5432
    volumes:
      - ./db/db_signet:/var/lib/postgresql/data
    expose:
      - 5432
    networks:
      network:
        ipv4_address: 172.20.0.8

volumes:
  api_keys:
    external: false

networks:
  network:
    ipam:
      config:
        - subnet: 172.20.0.0/24
