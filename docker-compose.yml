version: "3"
services:
  ui:
    container_name: dgl_ui
    image: node:19
    volumes:
      - ./ui/:/opt/sca/app
      - dgl_ui_modules:/opt/sca/app/node_modules
    ports:
      - 127.0.0.1:443:443
    working_dir: /opt/sca/app
    command: sh -c "npm install && exec /opt/sca/app/node_modules/.bin/vite --host"
    # entrypoint: [ "tail", "-f", "/dev/null" ]

  api:
    container_name: dgl_api
    build:
      context: ./api
      args:
        APP_UID: ${APP_UID} # read from .env file
        APP_GID: ${APP_GID} # read from .env file
    volumes:
      - ./api/:/opt/sca/app
      - dgl_api_modules:/opt/sca/app/node_modules
    expose:
      - 3030
    ports:
      - 127.0.0.1:3030:3030
    # entrypoint: ["tail", "-f", "/dev/null"]
    extra_hosts:
      - "host.docker.internal:host-gateway" # for connecting to services running on localhost of the host network
    depends_on:
     - postgres

  worker_api:
    container_name: dgl_worker_api
    build:
      context: ./worker/
      args:
        APP_UID: ${APP_UID} # read from .env file
        APP_GID: ${APP_GID} # read from .env file
    volumes:
      - ./worker/scaworkers/:/opt/sca/app/scaworkers
      - ./worker/.env:/opt/sca/app/.env
    expose:
      - 5001
    environment:
      - PORT=5001
    ports:
      - 127.0.0.1:5001:5001
    depends_on:
      - queue
      - mongo
    # restart: on-failure

  queue:
    # https://hub.docker.com/_/rabbitmq/
    container_name: dgl_queue
    # includes web gui ?
    image: rabbitmq:3-management
    # image: rabbitmq:3
    ports:
      - 127.0.0.1:5672:5672
      - 127.0.0.1:15672:15672
    volumes:
      - ./db/queue/data/:/var/lib/rabbitmq/
      # - ./db/queue/log/:/var/log/rabbitmq/
    environment:
      - RABBITMQ_DEFAULT_USER=user
      - RABBITMQ_DEFAULT_PASS=password
      - RABBITMQ_DEFAULT_VHOST=myvhost

  postgres:
    container_name: dgl_postgres
    image: postgres:14.5
    # restart: unless-stopped
    environment:
      - POSTGRES_USER=dgluser
      - POSTGRES_PASSWORD=example
      - POSTGRES_DB=dgl
    volumes:
      - ./db/db_postgres:/var/lib/postgresql/data
      - ./postgres/scripts:/docker-entrypoint-initdb.d
    ports:
      - 127.0.0.1:5432:5432
    expose:
      - 5432

  mongo:
    # https://hub.docker.com/_/mongo
    container_name: dgl_celery_mongo
    image: mongo:5
    ports:
      # helpful for using a GUI client like compass for troubleshooting
      - 127.0.0.1:27017:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    volumes:
      - ./db/db_mongo:/data/db
      # for importing database files
      - ./db/mongodump:/opt/sca/app/mongodump


volumes:
  dgl_ui_modules:
    external: false

  dgl_api_modules:
    external: false
