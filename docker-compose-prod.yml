version: "3"
name: bioloop
services:
  ui:
    restart: unless-stopped
    image: node:19
    volumes:
      - ./ui/:/opt/sca/app
      - ui_modules:/opt/sca/app/node_modules
    working_dir: /opt/sca/app
    command: sh -c "npm install && npm run builddev"
    

  api:
    restart: unless-stopped
    build:
      context: ./api
      args:
        APP_UID: ${APP_UID} # read from .env file
        APP_GID: ${APP_GID} # read from .env file
    volumes:
      - /opt/sca/uploads:/opt/sca/uploads
      - ./api/:/opt/sca/app
      - api_modules:/opt/sca/app/node_modules
      - ${FILESYSTEM_BASE_DIR_SCRATCH}:${FILESYSTEM_MOUNT_DIR_SCRATCH}
      - ${FILESYSTEM_BASE_DIR_PROJECT}:${FILESYSTEM_MOUNT_DIR_PROJECT}
    expose:
      - 3030
    # entrypoint: [ "tail", "-f", "/dev/null" ]
    depends_on:
     - postgres
    networks:
      network:
        ipv4_address: 172.19.0.2
    entrypoint:
      - sh
      - -c
      - |
        npm install \
        && npx prisma generate client \
        && exec /opt/sca/app/node_modules/.bin/nodemon --signal SIGTERM src/index.js


  postgres:
    image: postgres:14.5
    restart: unless-stopped
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - ./db/prod/db_postgres:/var/lib/postgresql/data
      - ./db/postgres/scripts:/docker-entrypoint-initdb.d
      - ./db/postgres/aux_scripts:/opt/sca/scripts
      - ./db/backups:/opt/sca/backups
    expose:
      - 5432
    networks:
      network:
        ipv4_address: 172.19.0.3

# sudo docker compose -f "docker-compose-prod.yml" run --rm pgbackup
  pgbackup:
    image: postgres:14.5
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - PGPASSWORD=${POSTGRES_PASSWORD}
      - PROJ_NAME=${COMPOSE_PROJECT_NAME}
    volumes:
      - /opt/sca/postgres_backups:/backup
    networks:
      - network
    command: >
      bash -c "pg_dump -w -f /backup/$${PROJ_NAME}_postgres_backup.$$(date +%F).psql --username=$$POSTGRES_USER --host=postgres --dbname=$$POSTGRES_DB"

volumes:
  ui_modules:
    external: false

  api_modules:
    external: false

networks:
  network:
    ipam:
      config:
        - subnet: 172.19.0.0/24
