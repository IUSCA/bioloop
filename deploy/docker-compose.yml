name: bioloop
services:
  nginx:
    image: git.sca.iu.edu:5050/iusca/bioloop/nginx:latest
    volumes:
      - ui_modules:/usr/share/nginx/html
    expose:
      - 8080
    depends_on:
      - api
    networks:
      network:
        ipv4_address: 172.20.0.2


  ui:
    image: git.sca.iu.edu:5050/iusca/bioloop/ui:latest
    volumes:
      - ui_modules:/opt/sca/app/dist
    environment:
      - VITE_CAS_RETURN=${VITE_CAS_RETURN}
      - VITE_API_URL=${VITE_API_URL}
    depends_on:
      - api
    restart: "no"
    networks:
      network:
        ipv4_address: 172.20.0.3
  api:
    image: git.sca.iu.edu:5050/iusca/bioloop/api:latest
    environment:
      - NODE_ENV=${NODE_ENV}
      - DATABASE_HOST=${POSTGRES_HOST}
      - DATABASE_USER=${POSTGRES_USER}
      - DATABASE_PORT=5432
      - DATABASE_DB=${POSTGRES_DB}
      - DATABASE_SCHEMA=public
      - DATABASE_PASSWORD=${POSTGRES_PASSWORD}
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:5432/${POSTGRES_DB}?schema=public
      - WORKFLOW_AUTH_TOKEN=${WORKFLOW_AUTH_TOKEN}
      - OAUTH_BASE_URL=${OAUTH_BASE_URL}
      - OAUTH_DOWNLOAD_CLIENT_ID=${OAUTH_DOWNLOAD_CLIENT_ID}
      - OAUTH_DOWNLOAD_CLIENT_SECRET=${OAUTH_DOWNLOAD_CLIENT_SECRET}
      - DOWNLOAD_SERVER_BASE_URL=${DOWNLOAD_SERVER_BASE_URL}
    # entrypoint: [ "tail", "-f", "/dev/null" ]
    entrypoint:
      - sh
      - -c
      - |
        ./keys/genkeys.sh \
        && npx prisma generate \
        && npm run start
    expose:
      - 3030
    depends_on:
     - postgres
    networks:
      network:
        ipv4_address: 172.20.0.4

  postgres:
    image: postgres:14.5
    restart: unless-stopped
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - /opt/sca/bioloop/db/db_postgres:/var/lib/postgresql/data
      - /opt/sca/bioloop/db/postgres/scripts:/docker-entrypoint-initdb.d
    expose:
      - 5432
    networks:
      network:
        ipv4_address: 172.20.0.5
        

  # pgbackup:
  #   image: postgres:14.5
  #   environment:
  #     - POSTGRES_DB=${POSTGRES_DB}
  #     - POSTGRES_USER=${POSTGRES_USER}
  #     - PGPASSWORD=${POSTGRES_PASSWORD}
  #     - PROJ_NAME=${COMPOSE_PROJECT_NAME}
  #   volumes:
  #     - /opt/sca/postgres_backups:/backup
  #   networks:
  #     - network
  #   command: >
  #     bash -c "pg_dump -w -f /backup/$${PROJ_NAME}_postgres_backup.$$(date +%F).psql --username=$$POSTGRES_USER --host=postgres --dbname=$$POSTGRES_DB"


volumes:
  ui_modules:
    external: false

networks:
  network:
    ipam:
      config:
        - subnet: 172.20.0.0/24