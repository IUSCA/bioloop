name: bioloop
services:
  nginx:
    image: git.sca.iu.edu:5050/${PROJECT_NAME}/nginx:latest
    volumes:
      - ui_modules:/usr/share/nginx/html
    ports:
      - 127.0.0.1:8080:8080
    depends_on:
      - api
    networks:
      network:
        ipv4_address: 172.20.0.2

  ui:
    image: git.sca.iu.edu:5050/${PROJECT_NAME}/ui:latest
    volumes:
      - ui_modules:/opt/sca/app/dist
    depends_on:
      - api
    restart: "no"
    networks:
      network:
        ipv4_address: 172.20.0.3

  api:
    image: git.sca.iu.edu:5050/${PROJECT_NAME}/api:latest
    entrypoint:
      - sh
      - -c
      - |
        ./keys/genkeys.sh \
        && npx prisma generate \
        && npx prisma migrate deploy \
        && npm run start
    expose:
      - 3030
    depends_on:
     - postgres
    networks:
      network:
        ipv4_address: 172.20.0.4

  postgres:
    image: postgres:14.5
    restart: unless-stopped
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - postgres_scripts:/docker-entrypoint-initdb.d
    expose:
      - 5432
    networks:
      network:
        ipv4_address: 172.20.0.5

  # pgbackup:
  #   image: postgres:14.5
  #   environment:
  #     - POSTGRES_DB=${POSTGRES_DB}
  #     - POSTGRES_USER=${POSTGRES_USER}
  #     - PGPASSWORD=${POSTGRES_PASSWORD}
  #     - PROJ_NAME=${COMPOSE_PROJECT_NAME}
  #   volumes:
  #     - postgres_backups:/backup
  #   networks:
  #     - network
  #   command: >
  #     bash -c "pg_dump -w -f /backup/$${PROJ_NAME}_postgres_backup.$$(date +%F).psql --username=$$POSTGRES_USER --host=postgres --dbname=$$POSTGRES_DB"
    # networks:
    #   network:
    #     ipv4_address: 172.20.0.6

volumes:
  ui_modules:
    external: false
  postgres_data:
    external: false
  postgres_scripts:
    external: false
  # postgres_backups:
  #   external: false

networks:
  network:
    ipam:
      config:
        - subnet: 172.20.0.0/24