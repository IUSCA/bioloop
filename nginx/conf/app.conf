# cspell:ignore aboutlimit SAMEORIGIN nosniff
limit_req_zone $binary_remote_addr zone=aboutlimit:10m rate=10r/s;

server {
  listen 80;
  server_name localhost;
  client_max_body_size 100M;
  access_log /var/log/nginx/localhost_access.log ;
  error_log /var/log/nginx/localhost_error.log;

  proxy_set_header X-Real-IP $remote_addr;

  add_header Content-Security-Policy "default-src http: data: 'unsafe-inline' 'unsafe-eval'" always;
  add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
  add_header X-Frame-Options "SAMEORIGIN" always;
  add_header X-Xss-Protection "1; mode=block" always;
  add_header X-Content-Type-Options "nosniff" always;
  add_header Referrer-Policy "no-referrer-when-downgrade";

  return 301 https://$server_name$request_uri;
}

server {
  listen 443 ssl;
  http2 on;
  server_name localhost;
  client_max_body_size 100M;
  access_log /var/log/nginx/localhost_ssl_access.log ;
  error_log /var/log/nginx/localhost_ssl_error.log;

  ssl_certificate /etc/nginx/certs/cert.pem;
  ssl_certificate_key /etc/nginx/certs/key.pem;

  ssl_session_cache shared:SSL:20m;
  ssl_session_timeout 60m;
  ssl_protocols TLSv1.2 TLSv1.3;
  ssl_ciphers HIGH:!aNULL:!MD5;

  add_header Content-Security-Policy "default-src https: data: 'unsafe-inline' 'unsafe-eval'" always;
  add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
  add_header X-Frame-Options "ALLOW-FROM https://rtweb.webtest.iu.edu" always;
  add_header X-Frame-Options "ALLOW-FROM https://rt.uits.iu.edu" always;
  add_header X-Xss-Protection "1; mode=block" always;
  add_header X-Content-Type-Options "nosniff" always;
  add_header Referrer-Policy "no-referrer-when-downgrade";
  add_header Permissions-Policy "fullscreen=(self)";

  proxy_redirect off;
  proxy_set_header Host $host;
  proxy_set_header X-Real-IP $remote_addr;
  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  proxy_set_header X-Forwarded-Proto https;
  ##  see http://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_set_header
  proxy_set_header Upgrade $http_upgrade;
  proxy_set_header Connection 'upgrade';
  proxy_set_header Host $host;

  location /about_latest/ {
    limit_req zone=aboutlimit;
  }

  location / {
    alias /opt/sca/ui/;
    index index.html;
    try_files $uri $uri/ /index.html =404;
  }

  location /api/ {
    proxy_pass http://host.docker.internal:9001/;
    proxy_http_version 1.1;
    proxy_cache_bypass $http_upgrade;
    proxy_redirect http://api/ https://$host/api/ ;

  }

  location /grafana/ {
    proxy_pass http://grafana:3000/;
    proxy_http_version 1.1;
    proxy_cache_bypass $http_upgrade;
    proxy_redirect http://grafana/ https://$host/grafana/ ;
    proxy_set_header X-Forwarded-Proto https;

    # rewrite ^/grafana/(.*)$ /$1 break;

    # Extract grafana_token from cookies and set it as X-JWT-Assertion header
    set $grafana_token "";
    if ($http_cookie ~* "grafana_token=([^;]+)") {
      set $grafana_token $1;
    }
    proxy_set_header X-JWT-Assertion $grafana_token;
  }
}