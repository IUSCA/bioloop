name: bioloop-5-e2e
services:
  ui:
    image: node:19
    volumes:
      - ./ui/:/opt/sca/app
      - ui_modules:/opt/sca/app/node_modules
    ports:
      - 127.0.0.1:443:443
    working_dir: /opt/sca/app
    # command: sh -c "npm install && exec /opt/sca/app/node_modules/.bin/vite --host"
    # entrypoint: [ "tail", "-f", "/dev/null" ]
    entrypoint:
      - sh
      - -c
      - |
        npm install && exec /opt/sca/app/node_modules/.bin/vite --host

  api:
    image: node:19
    # user: ${APP_UID}:${APP_GID}
    # build:
      # context: ./api
      # args:
        # APP_UID: ${APP_UID} # read from .env file
        # APP_GID: ${APP_GID} # read from .env file
    # environment:
    #   - APP_UID=APP_UID
    #   - APP_GID=APP_GID
    volumes:
      - ./api/:/opt/sca/app
      - api_modules:/opt/sca/app/node_modules
    expose:
      - 3031
    ports:
      - 127.0.0.1:3031:3031
    working_dir: /opt/sca/app
    # entrypoint: ["tail", "-f", "/dev/null"]
    # command: sh -c "sleep infinity"
    entrypoint:
      - sh
      - -c
      - |
        npm install \
        && npx prisma generate client \
        && exec /opt/sca/app/node_modules/.bin/nodemon --signal SIGTERM src/index.js
    healthcheck:
      test: ["CMD", "curl", "-f", "127.0.0.1:9001/health"]
    extra_hosts:
      - "host.docker.internal:host-gateway" # for connecting to services running on localhost of the host network
    depends_on:
     - postgres

  postgres:
    image: postgres:14.5
    # restart: unless-stopped
    environment:
      - POSTGRES_USER=appuser
      - POSTGRES_PASSWORD=example
      - POSTGRES_DB=app
    volumes:
      - ./db/db_postgres:/var/lib/postgresql/data
      - ./db/postgres/scripts:/docker-entrypoint-initdb.d
      - ./db/postgres/aux_scripts:/opt/sca/scripts
      - ./db/backups:/opt/sca/backups
    ports:
      - 127.0.0.1:9002:5432
    expose:
      - 9002

  nginx:
    image: nginx:1.25
    ports:
        - 8000:8000
    volumes:
        - ./nginx/src:/usr/share/nginx/html
        - ./nginx/conf:/etc/nginx/conf.d
        - ./data:/opt/sca/data
    extra_hosts:
      - "host.docker.internal:host-gateway" # for connecting to services running on localhost of the host network


  e2e:
    build: tests
    volumes:
      - ./tests/:/opt/sca/app
      - test_modules:/opt/sca/app/node_modules
    entrypoint:
      - sh
      - -c
      - |
        /opt/sca/app/node_modules/.bin/playwright test
    depends_on:
      # ensures that tests don't run until the API container is up
      api:
        condition: service_healthy
    network_mode: "host"


volumes:
  ui_modules:
    external: false

  api_modules:
    external: false

  test_modules:
    external: false
